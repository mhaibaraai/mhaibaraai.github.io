import{_ as i,c as a,ah as e,o as n}from"./chunks/framework.Zls3YEZT.js";const c=JSON.parse('{"title":"Node","description":"","frontmatter":{},"headers":[],"relativePath":"zh/note/environment/node.md","filePath":"zh/note/environment/node.md","lastUpdated":1729235069000}'),l={name:"zh/note/environment/node.md"};function t(h,s,p,k,d,r){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="Node" tabindex="-1">Node <a class="header-anchor" href="#Node" aria-label="Permalink to &quot;Node {#Node}&quot;">​</a></h1><blockquote><p>依赖管理和使用经验</p></blockquote><h2 id="node-versions" tabindex="-1">Node 的版本选择 <a class="header-anchor" href="#node-versions" aria-label="Permalink to &quot;Node 的版本选择 {#node-versions}&quot;">​</a></h2><ul><li><strong>LTS 版本</strong>（长期支持版本）：稳定版本，通常用于生产环境。 <ul><li>Node.js 18.20.4 (Hydrogen)</li><li>Node.js 20.17.0 (Iron)</li></ul></li><li><strong>Current 版本</strong>（当前版本）：最新的主要版本，加入最新特性和改进，通常用于开发和测试。 <ul><li>Node.js 22.9.0（2024-09-17）</li></ul></li></ul><h2 id="install-node" tabindex="-1">安装配置 <a class="header-anchor" href="#install-node" aria-label="Permalink to &quot;安装配置 {#install-node}&quot;">​</a></h2><h3 id="install-download" tabindex="-1">直接下载安装 <a class="header-anchor" href="#install-download" aria-label="Permalink to &quot;直接下载安装 {#install-download}&quot;">​</a></h3><ol><li><p>macOS:</p><ul><li><p>从 <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js 官网</a> 下载 macOS 安装包（<code>.pkg</code> 文件）</p></li><li><p>使用 Homebrew 安装</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">brew</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">什么是 Homebrew？如何安装？</p><p>跳转到 <a href="./../mac/brew">Homebrew</a></p></div></li></ul></li><li><p>Windows:</p><ul><li><p>从 <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js 官网</a> 下载 Windows 安装包（<code>.msi</code> 文件）</p></li><li><p>如果已安装 Windows 10 或更新版本，可以使用 winget：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">winget</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --id=OpenJS.Nodejs</span></span></code></pre></div></li></ul></li></ol><h3 id="install-package-manager" tabindex="-1">使用包管理器安装（推荐） <a class="header-anchor" href="#install-package-manager" aria-label="Permalink to &quot;使用包管理器安装（推荐） {#install-package-manager}&quot;">​</a></h3><blockquote><ul><li>包版本管理工具的主要好处在于帮助开发者更方便地管理多个版本的 Node.js 和 npm。</li></ul></blockquote><ul><li><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">nvm</a> 最受欢迎的 Node.js 版本管理工具，适用于 macOS 和 Linux。</li><li><a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noreferrer">nvm-windows</a> <code>nvm</code> 的 Windows 版本，专为 Windows 开发者设计。</li><li><a href="https://github.com/Schniz/fnm" target="_blank" rel="noreferrer">fnm</a> 也是 macOS 的优秀选择，具备轻量和高效的特点，适合那些不想耗费系统资源的开发者。</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>本文档以 <code>fnm</code> 为例，介绍如何在 macOS 上安装和使用 <code>fnm</code>。</p><p>跳转到 <a href="./fnm">fnm</a> 了解更多。</p></div><h2 id="pnpm" tabindex="-1">pnpm <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;pnpm {#pnpm}&quot;">​</a></h2><h3 id="pnpm-install" tabindex="-1">安装 <a class="header-anchor" href="#pnpm-install" aria-label="Permalink to &quot;安装 {#pnpm-install}&quot;">​</a></h3><ul><li><p>使用 npm 安装 pnpm：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -g</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pnpm</span></span></code></pre></div></li><li><p>使用 Homebrew 安装 pnpm：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">brew</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pnpm</span></span></code></pre></div></li></ul><h3 id="pnpm-workspace" tabindex="-1">工作空间 <a class="header-anchor" href="#pnpm-workspace" aria-label="Permalink to &quot;工作空间 {#pnpm-workspace}&quot;">​</a></h3><p><code>pnpm-workspace.yaml</code> 定义了工作空间的根目录，并能够使您从工作空间中包含 <code>/</code> 排除目录。默认情况下，包含所有子目录。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">packages</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages/*</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docs</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages/playground/**</span></span></code></pre></div><h2 id="node-commands" tabindex="-1">实用命令 <a class="header-anchor" href="#node-commands" aria-label="Permalink to &quot;实用命令 {#node-commands}&quot;">​</a></h2><ul><li>删除所有 <code>node_modules</code> 文件夹</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">find</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -name</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">node_modules</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -type</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> d</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -prune</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -execdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -rf</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{}</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> +</span></span></code></pre></div><ul><li>递归删除 <code>packages</code> 和 <code>internal</code> 目录下的 <code>dist</code> 文件夹，同时忽略 <code>node_modules</code> 目录</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">find</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> internal</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -path</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">*/node_modules/*</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -prune</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -o</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -name</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">dist</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -type</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> d</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -exec</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -rf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> +</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ||</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> true</span></span></code></pre></div><ul><li><code>postinstall</code> 钩子在安装依赖后执行，可以用来执行一些构建操作，比如构建、设置环境或修复依赖关系。</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">scripts</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">postinstall</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">pnpm build</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">build</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">pnpm clean &amp;&amp; pnpm -r -F=&#39;./packages/**&#39; -F=&#39;./internal/**&#39; run build</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">clean</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">find packages internal -path &#39;*/node_modules/*&#39; -prune -o -name &#39;dist&#39; -type d -exec rm -rf {} + || true</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><h2 id="node-note" tabindex="-1">📝 笔记 <a class="header-anchor" href="#node-note" aria-label="Permalink to &quot;📝 笔记 {#node-note}&quot;">​</a></h2><h3 id="npm-args" tabindex="-1">参数传递 <a class="header-anchor" href="#npm-args" aria-label="Permalink to &quot;参数传递 {#npm-args}&quot;">​</a></h3><ul><li>当你使用 <code>npm run</code> 命令时，如果你想要传递参数给你的脚本，你需要在参数前加上 <code>--</code> , 例如：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> gen:cc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --path</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ol-cesium-map</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> demo</span></span></code></pre></div><p>这样，<code>--path ol-cesium-map --name demo</code> 就会被传递给你的脚本，而不是 <code>npm run</code> 命令。</p><ul><li>使用 <code>mri</code> 来解析这些参数：</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> process</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">slice</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">mriData</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> mri</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">MriData</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// mriData : { _: [], path: &#39;ol-cesium-map&#39;, name: &#39;demo&#39; }</span></span></code></pre></div><h3 id="node-memory-limit" tabindex="-1">增加 node 内存限制 <a class="header-anchor" href="#node-memory-limit" aria-label="Permalink to &quot;增加 node 内存限制 {#node-memory-limit}&quot;">​</a></h3><p>通过 <code>--max_old_space_size</code> 选项，你可以指定更大的内存使用限制，构建大项目时能有效避免内存不足导致的 <code>JavaScript heap out of memory</code> 错误</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">export</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> NODE_OPTIONS</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">--max_old_space_size</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10240</span></span></code></pre></div><p>或者在 <code>package.json</code> 中的 <code>scripts</code> 中指定：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">scripts</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">build</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">NODE_OPTIONS=--max_old_space_size=10240 react-scripts build</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div>`,36)]))}const g=i(l,[["render",t]]);export{c as __pageData,g as default};
